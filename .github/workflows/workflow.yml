name: CI/CD Pipeline
on:
  push:
    branches: [master]

jobs:
  # continuous-integration:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Step 1
  #     - uses: actions/checkout@v2
  #     # Step 2
  #     - name: Set up Node 16.x
  #       uses: actions/setup-node@v2
  #       with:
  #           node-version: 16.x
  #     # Step 3
  #     - name: Install dependencies
  #       run: yarn
  #     # Step 5
  #     - name: Lint
  #       run: yarn lint
  #     # Step 6
  #     - name: Run tests
  #       run: yarn test

  continuous-deployment:
    runs-on: ubuntu-latest
    # needs: [continuous-integration]
    if: github.ref == 'refs/heads/master'
    steps:
      # Step 1
      - uses: actions/checkout@v2
      # Step 2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Step 3
      - name: Build shared docker image
        uses: docker/build-push-action@v2
        with:
          tags: messenger-shared:latest,ghcr.io/elbarae1921/messenger-shared:latest
          file: Dockerfile.shared
          push: true
      # Step 4
      - name: Build & publish graphql server
        uses: docker/build-push-action@v2
        with:
          tags: ghcr.io/elbarae1921/mgraphql:latest
          push: true
          context: ./packages/mgraphql
      # # Step 5
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: eu-west-2
      # # Step 6
      # - name: Create CodeDeploy Deployment
      #   id: deploy
      #   run: |
      #     aws deploy create-deployment \
      #       --application-name skeduler-deploy \
      #       --deployment-group-name SkedulerDeploymentGroup \
      #       --deployment-config-name CodeDeployDefault.OneAtATime \
      #       --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
